{"mappings":"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","sources":["../../node_modules/@parcel/runtime-browser-hmr/lib/runtime-73a41195f012c907.js","node_modules/alchemy-sdk/dist/esm/alchemy-websocket-provider-3523bd89.js","node_modules/alchemy-sdk/src/internal/websocket-backfiller.ts","node_modules/alchemy-sdk/src/api/alchemy-websocket-provider.ts","node_modules/sturdy-websocket/dist/index.js","node_modules/sturdy-websocket/src/index.ts","node_modules/websocket/lib/browser.js","node_modules/es5-ext/global.js","node_modules/websocket/lib/version.js","node_modules/websocket/package.json"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"44f5f67b9390f3ca\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}",null,"import { AlchemyWebSocketProvider } from '../api/alchemy-websocket-provider';\nimport { fromHex, toHex } from '../api/util';\n\nexport interface BatchPart {\n  method: string;\n  params?: any;\n}\n\nexport interface NewHeadsEvent {\n  author: string;\n  difficulty: string;\n  extraData: string;\n  gasLimit: string;\n  gasUsed: string;\n  hash: string;\n  logsBloom: string;\n  miner: string;\n  mixHash: string;\n  nonce: string;\n  number: string;\n  parentHash: string;\n  receiptsRoot: string;\n  sealFields: string[];\n  sha3Uncles: string;\n  size: string;\n  stateRoot: string;\n  timestamp: string;\n  transactionsRoot: string;\n}\n\n/** The return type of eth_getBlocksByHash. */\nexport interface BlockHead extends NewHeadsEvent {\n  totalDifficulty: string;\n  transactions: any[];\n  uncles: string[];\n}\n\nexport interface LogsEvent {\n  address: string;\n  blockHash: string;\n  blockNumber: string;\n  data: string;\n  logIndex: string;\n  topics: string[];\n  transactionHash: string;\n  transactionIndex: string;\n  removed?: boolean;\n}\n\nexport interface LogsSubscriptionFilter {\n  address?: string | string[];\n  topics?: Array<string | string[] | null>;\n}\n\nexport interface GetLogsOptions extends LogsSubscriptionFilter {\n  fromBlock?: string;\n  toBlock?: string;\n}\n\ninterface CommonAncestor {\n  blockNumber: number;\n  logIndex: number;\n}\n\n/**\n * The maximum number of blocks to backfill. If more than this many blocks have\n * been missed, then we'll sadly miss data, but we want to make sure we don't\n * end up requesting thousands of blocks if somebody left their laptop closed for a week.\n */\nconst MAX_BACKFILL_BLOCKS = 120;\n\n/**\n * The WebsocketBackfiller fetches events that were sent since a provided block\n * number. This is used in the {@link AlchemyWebSocketProvider} to backfill\n * events that were transmitted while the websocket connection was down.\n *\n * The backfiller backfills two main eth_subscribe events: `logs` and `newHeads`.\n *\n * @internal\n */\nexport class WebsocketBackfiller {\n  // TODO: Use HTTP provider to do backfill.\n  private maxBackfillBlocks = MAX_BACKFILL_BLOCKS;\n  constructor(private readonly provider: AlchemyWebSocketProvider) {}\n\n  /**\n   * Runs backfill for `newHeads` events.\n   *\n   * @param isCancelled Whether the backfill request is cancelled.\n   * @param previousHeads Previous head requests that were sent.\n   * @param fromBlockNumber The block number to start backfilling from.\n   * @returns A list of `newHeads` events that were sent since the last backfill.\n   */\n  async getNewHeadsBackfill(\n    isCancelled: () => boolean,\n    previousHeads: NewHeadsEvent[],\n    fromBlockNumber: number\n  ): Promise<NewHeadsEvent[]> {\n    throwIfCancelled(isCancelled);\n    const toBlockNumber = await this.getBlockNumber();\n    throwIfCancelled(isCancelled);\n\n    // If there are no previous heads to fetch, return new heads since\n    // `fromBlockNumber`, or up to maxBackfillBlocks from the current head.\n    if (previousHeads.length === 0) {\n      return this.getHeadEventsInRange(\n        Math.max(fromBlockNumber, toBlockNumber - this.maxBackfillBlocks) + 1,\n        toBlockNumber + 1\n      );\n    }\n\n    // If the last emitted event is too far back in the past, there's no need\n    // to backfill for reorgs. Just fetch the last `maxBackfillBlocks` worth of\n    // new heads.\n    const lastSeenBlockNumber = fromHex(\n      previousHeads[previousHeads.length - 1].number\n    );\n    const minBlockNumber = toBlockNumber - this.maxBackfillBlocks + 1;\n    if (lastSeenBlockNumber <= minBlockNumber) {\n      return this.getHeadEventsInRange(minBlockNumber, toBlockNumber + 1);\n    }\n\n    // To capture all `newHeads` events, return all head events from the last\n    // seen block number to current + any of the previous heads that were re-orged.\n    const reorgHeads: NewHeadsEvent[] = await this.getReorgHeads(\n      isCancelled,\n      previousHeads\n    );\n    throwIfCancelled(isCancelled);\n    const intermediateHeads: NewHeadsEvent[] = await this.getHeadEventsInRange(\n      lastSeenBlockNumber + 1,\n      toBlockNumber + 1\n    );\n    throwIfCancelled(isCancelled);\n    return [...reorgHeads, ...intermediateHeads];\n  }\n\n  /**\n   * Runs backfill for `logs` events.\n   *\n   * @param isCancelled Whether the backfill request is cancelled.\n   * @param filter The filter object that accompanies a logs subscription.\n   * @param previousLogs Previous log requests that were sent.\n   * @param fromBlockNumber The block number to start backfilling from.\n   */\n  async getLogsBackfill(\n    isCancelled: () => boolean,\n    filter: LogsSubscriptionFilter,\n    previousLogs: LogsEvent[],\n    fromBlockNumber: number\n  ): Promise<LogsEvent[]> {\n    throwIfCancelled(isCancelled);\n    const toBlockNumber = await this.getBlockNumber();\n    throwIfCancelled(isCancelled);\n\n    // If there are no previous logs to fetch, return new logs since\n    // `fromBlockNumber`, or up to `maxBackfillBlocks` from the current head.\n    if (previousLogs.length === 0) {\n      return this.getLogsInRange(\n        filter,\n        Math.max(fromBlockNumber, toBlockNumber - this.maxBackfillBlocks) + 1,\n        toBlockNumber + 1\n      );\n    }\n\n    // If the last emitted log is too far back in the past, there's no need\n    // to backfill for removed logs. Just fetch the last `maxBackfillBlocks`\n    // worth of logs.\n    const lastSeenBlockNumber = fromHex(\n      previousLogs[previousLogs.length - 1].blockNumber\n    );\n    const minBlockNumber = toBlockNumber - this.maxBackfillBlocks + 1;\n    if (lastSeenBlockNumber < minBlockNumber) {\n      return this.getLogsInRange(filter, minBlockNumber, toBlockNumber + 1);\n    }\n\n    // Return all log events that have happened along with log events that have\n    // been removed due to a chain reorg.\n    const commonAncestor = await this.getCommonAncestor(\n      isCancelled,\n      previousLogs\n    );\n    throwIfCancelled(isCancelled);\n\n    // All previous logs with a block number greater than the common ancestor\n    // were part of a re-org, so mark them as such.\n    const removedLogs = previousLogs\n      .filter(log => fromHex(log.blockNumber) > commonAncestor.blockNumber)\n      .map(log => ({ ...log, removed: true }));\n\n    // If no common ancestor was found, start backfill from the oldest log's\n    // block number.\n    const fromBlockInclusive =\n      commonAncestor.blockNumber === Number.NEGATIVE_INFINITY\n        ? fromHex(previousLogs[0].blockNumber)\n        : commonAncestor.blockNumber;\n    let addedLogs = await this.getLogsInRange(\n      filter,\n      fromBlockInclusive,\n      toBlockNumber + 1\n    );\n\n    // De-dupe any logs that were already emitted.\n    addedLogs = addedLogs.filter(\n      log =>\n        log &&\n        (fromHex(log.blockNumber) > commonAncestor.blockNumber ||\n          fromHex(log.logIndex) > commonAncestor.logIndex)\n    );\n\n    throwIfCancelled(isCancelled);\n    return [...removedLogs, ...addedLogs];\n  }\n\n  /**\n   * Sets a new max backfill blocks. VISIBLE ONLY FOR TESTING.\n   *\n   * @internal\n   */\n  setMaxBackfillBlock(newMax: number): void {\n    this.maxBackfillBlocks = newMax;\n  }\n\n  /**\n   * Gets the current block number as a number.\n   *\n   * @private\n   */\n  private async getBlockNumber(): Promise<number> {\n    const blockNumberHex: string = await this.provider.send('eth_blockNumber');\n    return fromHex(blockNumberHex);\n  }\n\n  /**\n   * Gets all `newHead` events in the provided range. Note that the returned\n   * heads do not include re-orged heads. Use {@link getReorgHeads} to find heads\n   * that were part of a re-org.\n   *\n   * @private\n   */\n  private async getHeadEventsInRange(\n    fromBlockInclusive: number,\n    toBlockExclusive: number\n  ): Promise<NewHeadsEvent[]> {\n    if (fromBlockInclusive >= toBlockExclusive) {\n      return [];\n    }\n    const batchParts: BatchPart[] = [];\n    for (let i = fromBlockInclusive; i < toBlockExclusive; i++) {\n      batchParts.push({\n        method: 'eth_getBlockByNumber',\n        params: [toHex(i), false]\n      });\n    }\n\n    // TODO: handle errors\n    const blockHeads = await this.provider.sendBatch(batchParts);\n    return blockHeads.map(toNewHeadsEvent);\n  }\n\n  /**\n   * Returns all heads that were part of a reorg event.\n   *\n   * @private\n   */\n  private async getReorgHeads(\n    isCancelled: () => boolean,\n    previousHeads: NewHeadsEvent[]\n  ): Promise<NewHeadsEvent[]> {\n    const result: NewHeadsEvent[] = [];\n    // Iterate from the most recent head backwards in order to find the first\n    // block that was part of a re-org.\n    for (let i = previousHeads.length - 1; i >= 0; i--) {\n      const oldEvent = previousHeads[i];\n      const blockHead = await this.getBlockByNumber(fromHex(oldEvent.number));\n      throwIfCancelled(isCancelled);\n\n      // If the hashes match, then current head in the iteration was not re-orged.\n      if (oldEvent.hash === blockHead.hash) {\n        break;\n      }\n\n      result.push(toNewHeadsEvent(blockHead));\n    }\n    return result.reverse();\n  }\n\n  /**\n   * Simple wrapper around `eth_getBlockByNumber` that returns the complete\n   * block information for the provided block number.\n   *\n   * @private\n   */\n  private async getBlockByNumber(blockNumber: number): Promise<BlockHead> {\n    return this.provider.send('eth_getBlockByNumber', [\n      toHex(blockNumber),\n      false\n    ]);\n  }\n\n  /**\n   * Given a list of previous log events, finds the common block number from the\n   * logs that matches the block head.\n   *\n   * This can be used to identify which logs are part of a re-org.\n   *\n   * Returns 1 less than the oldest log's block number if no common ancestor was found.\n   *\n   * @private\n   */\n  private async getCommonAncestor(\n    isCancelled: () => boolean,\n    previousLogs: LogsEvent[]\n  ): Promise<CommonAncestor> {\n    // Iterate from the most recent head backwards in order to find the first\n    // block that was part of a re-org.\n    let blockHead = await this.getBlockByNumber(\n      fromHex(previousLogs[previousLogs.length - 1].blockNumber)\n    );\n    throwIfCancelled(isCancelled);\n    for (let i = previousLogs.length - 1; i >= 0; i--) {\n      const oldLog = previousLogs[i];\n\n      // Ensure that updated blocks are fetched every time the log's block number\n      // changes.\n      if (oldLog.blockNumber !== blockHead.number) {\n        blockHead = await this.getBlockByNumber(fromHex(oldLog.blockNumber));\n      }\n\n      // Since logs are ordered in ascending order, the first log that matches\n      // the hash should be the largest logIndex.\n      if (oldLog.blockHash === blockHead.hash) {\n        return {\n          blockNumber: fromHex(oldLog.blockNumber),\n          logIndex: fromHex(oldLog.logIndex)\n        };\n      }\n    }\n    return {\n      blockNumber: Number.NEGATIVE_INFINITY,\n      logIndex: Number.NEGATIVE_INFINITY\n    };\n  }\n\n  /**\n   * Gets all `logs` events in the provided range. Note that the returned logs\n   * do not include removed logs.\n   *\n   * @private\n   */ private async getLogsInRange(\n    filter: LogsSubscriptionFilter,\n    fromBlockInclusive: number,\n    toBlockExclusive: number\n  ): Promise<LogsEvent[]> {\n    if (fromBlockInclusive >= toBlockExclusive) {\n      return [];\n    }\n    const rangeFilter: GetLogsOptions = {\n      ...filter,\n      fromBlock: toHex(fromBlockInclusive),\n      toBlock: toHex(toBlockExclusive - 1)\n    };\n    return this.provider.send('eth_getLogs', [rangeFilter]);\n  }\n}\n\nfunction toNewHeadsEvent(head: BlockHead): NewHeadsEvent {\n  const result: NewHeadsEvent & Partial<BlockHead> = { ...head };\n  delete result.totalDifficulty;\n  delete result.transactions;\n  delete result.uncles;\n  return result;\n}\n\nexport function dedupeNewHeads(events: NewHeadsEvent[]): NewHeadsEvent[] {\n  return dedupe(events, event => event.hash);\n}\n\nexport function dedupeLogs(events: LogsEvent[]): LogsEvent[] {\n  return dedupe(events, event => `${event.blockHash}/${event.logIndex}`);\n}\n\nfunction dedupe<T>(items: T[], getKey: (item: T) => any): T[] {\n  const keysSeen: Set<any> = new Set();\n  const result: T[] = [];\n  items.forEach(item => {\n    const key = getKey(item);\n    if (!keysSeen.has(key)) {\n      keysSeen.add(key);\n      result.push(item);\n    }\n  });\n  return result;\n}\n\nconst CANCELLED = new Error('Cancelled');\nexport function throwIfCancelled(isCancelled: () => boolean): void {\n  if (isCancelled()) {\n    throw CANCELLED;\n  }\n}\n","import SturdyWebSocket from 'sturdy-websocket';\n\nimport { Listener } from '@ethersproject/abstract-provider';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport {\n  Networkish,\n  getNetwork as getNetworkFromEthers\n} from '@ethersproject/networks';\nimport { Network as NetworkFromEthers } from '@ethersproject/networks/lib/types';\nimport {\n  CommunityResourcable,\n  WebSocketProvider\n} from '@ethersproject/providers';\n\nimport {\n  EthersEvent,\n  getAlchemyEventTag,\n  isAlchemyEvent,\n  verifyAlchemyEventName\n} from '../internal/ethers-event';\nimport {\n  ALCHEMY_EVENT_TYPES,\n  ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE,\n  ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE,\n  JsonRpcRequest,\n  JsonRpcResponse,\n  SingleOrBatchResponse,\n  SubscriptionEvent,\n  WebSocketMessage\n} from '../internal/internal-types';\nimport {\n  BatchPart,\n  LogsEvent,\n  LogsSubscriptionFilter,\n  NewHeadsEvent,\n  WebsocketBackfiller,\n  dedupeLogs,\n  dedupeNewHeads,\n  throwIfCancelled\n} from '../internal/websocket-backfiller';\nimport { AlchemyEventType, AlchemySubscription } from '../types/types';\nimport {\n  CustomNetworks,\n  DEFAULT_ALCHEMY_API_KEY,\n  EthersNetwork,\n  noop\n} from '../util/const';\nimport { VERSION } from '../version';\nimport { AlchemyConfig } from './alchemy-config';\nimport { AlchemyProvider } from './alchemy-provider';\nimport { fromHex } from './util';\n\nconst HEARTBEAT_INTERVAL = 30000;\nconst HEARTBEAT_WAIT_TIME = 10000;\nconst BACKFILL_TIMEOUT = 60000;\nconst BACKFILL_RETRIES = 5;\n/**\n * Subscriptions have a memory of recent events they have sent so that in the\n * event that they disconnect and need to backfill, they can detect re-orgs.\n * Keep a buffer that goes back at least these many blocks, the maximum amount\n * at which we might conceivably see a re-org.\n *\n * Note that while our buffer goes back this many blocks, it may contain more\n * than this many elements, since in the case of logs subscriptions more than\n * one event may be emitted for a block.\n */\nconst RETAINED_EVENT_BLOCK_COUNT = 10;\n\n/**\n * SDK's custom implementation fo the ethers.js's 'AlchemyWebSocketProvider'.\n *\n * Do not call this constructor directly. Instead, instantiate an instance of\n * {@link Alchemy} and call {@link Alchemy.config.getWebSocketProvider()}.\n *\n * @public\n */\nexport class AlchemyWebSocketProvider\n  extends WebSocketProvider\n  implements CommunityResourcable\n{\n  _events: Array<EthersEvent> = [];\n  readonly apiKey: string;\n\n  // In the case of a WebSocket reconnection, all subscriptions are lost and we\n  // create new ones to replace them, but we want to create the illusion that\n  // the original subscriptions persist. Thus, maintain a mapping from the\n  // \"virtual\" subscription ids which are visible to the consumer to the\n  // \"physical\" subscription ids of the actual connections. This terminology is\n  // borrowed from virtual and physical memory, which has a similar mapping.\n  /** @internal */\n  private readonly virtualSubscriptionsById: Map<string, VirtualSubscription> =\n    new Map();\n  /** @internal */\n  private readonly virtualIdsByPhysicalId: Map<string, string> = new Map();\n  /** @internal */\n  private readonly backfiller: WebsocketBackfiller;\n  /** @internal */\n  private heartbeatIntervalId?: NodeJS.Timeout;\n  /** @internal */\n  private cancelBackfill: () => void;\n\n  /** @internal */\n  constructor(config: AlchemyConfig, wsConstructor?: any) {\n    // Normalize the API Key to a string.\n    const apiKey = AlchemyProvider.getApiKey(config.apiKey);\n\n    // Generate our own connection info with the correct endpoint URLs.\n    const alchemyNetwork = AlchemyProvider.getAlchemyNetwork(config.network);\n    const connection = AlchemyProvider.getAlchemyConnectionInfo(\n      alchemyNetwork,\n      apiKey,\n      'wss'\n    );\n\n    const protocol = `alchemy-sdk-${VERSION}`;\n\n    // Use the provided config URL override if it exists, otherwise use the created one.\n    const ws = new SturdyWebSocket(config.url ?? connection.url, protocol, {\n      wsConstructor: wsConstructor ?? getWebsocketConstructor()\n    });\n\n    // Normalize the Alchemy named network input to the network names used by\n    // ethers. This allows the parent super constructor in JsonRpcProvider to\n    // correctly set the network.\n    const ethersNetwork = EthersNetwork[alchemyNetwork];\n    super(ws as any, ethersNetwork);\n    this.apiKey = apiKey;\n\n    // Start heartbeat and backfiller for the websocket connection.\n    this.backfiller = new WebsocketBackfiller(this);\n    this.addSocketListeners();\n    this.startHeartbeat();\n    this.cancelBackfill = noop;\n  }\n\n  /**\n   * Overrides the `BaseProvider.getNetwork` method as implemented by ethers.js.\n   *\n   * This override allows the SDK to set the provider's network to values not\n   * yet supported by ethers.js.\n   *\n   * @internal\n   * @override\n   */\n  static getNetwork(network: Networkish): NetworkFromEthers {\n    if (typeof network === 'string' && network in CustomNetworks) {\n      return CustomNetworks[network];\n    }\n\n    // Call the standard ethers.js getNetwork method for other networks.\n    return getNetworkFromEthers(network);\n  }\n\n  /**\n   * Overridden implementation of ethers that includes Alchemy based subscriptions.\n   *\n   * @param eventName Event to subscribe to\n   * @param listener The listener function to call when the event is triggered.\n   * @override\n   * @public\n   */\n  // TODO: Override `Listener` type to get type autocompletions.\n  on(eventName: AlchemyEventType, listener: Listener): this {\n    return this._addEventListener(eventName, listener, false);\n  }\n\n  /**\n   * Overridden implementation of ethers that includes Alchemy based\n   * subscriptions. Adds a listener to the triggered for only the next\n   * {@link eventName} event, after which it will be removed.\n   *\n   * @param eventName Event to subscribe to\n   * @param listener The listener function to call when the event is triggered.\n   * @override\n   * @public\n   */\n  // TODO: Override `Listener` type to get type autocompletions.\n  once(eventName: AlchemyEventType, listener: Listener): this {\n    return this._addEventListener(eventName, listener, true);\n  }\n\n  /**\n   * Removes the provided {@link listener} for the {@link eventName} event. If no\n   * listener is provided, all listeners for the event will be removed.\n   *\n   * @param eventName Event to unlisten to.\n   * @param listener The listener function to remove.\n   * @override\n   * @public\n   */\n  off(eventName: AlchemyEventType, listener?: Listener): this {\n    if (isAlchemyEvent(eventName)) {\n      return this._off(eventName, listener);\n    } else {\n      return super.off(eventName, listener);\n    }\n  }\n\n  /**\n   * Remove all listeners for the provided {@link eventName} event. If no event\n   * is provided, all events and their listeners are removed.\n   *\n   * @param eventName The event to remove all listeners for.\n   * @override\n   * @public\n   */\n  removeAllListeners(eventName?: AlchemyEventType): this {\n    if (eventName !== undefined && isAlchemyEvent(eventName)) {\n      return this._removeAllListeners(eventName);\n    } else {\n      return super.removeAllListeners(eventName);\n    }\n  }\n\n  /**\n   * Returns the number of listeners for the provided {@link eventName} event. If\n   * no event is provided, the total number of listeners for all events is returned.\n   *\n   * @param eventName The event to get the number of listeners for.\n   * @public\n   * @override\n   */\n  listenerCount(eventName?: AlchemyEventType): number {\n    if (eventName !== undefined && isAlchemyEvent(eventName)) {\n      return this._listenerCount(eventName);\n    } else {\n      return super.listenerCount(eventName);\n    }\n  }\n\n  /**\n   * Returns an array of listeners for the provided {@link eventName} event. If\n   * no event is provided, all listeners will be included.\n   *\n   * @param eventName The event to get the listeners for.\n   * @public\n   * @override\n   */\n  listeners(eventName?: AlchemyEventType): Array<Listener> {\n    if (eventName !== undefined && isAlchemyEvent(eventName)) {\n      return this._listeners(eventName);\n    } else {\n      return super.listeners(eventName);\n    }\n  }\n\n  /**\n   * Overrides the method in `BaseProvider` in order to properly format the\n   * Alchemy subscription events.\n   *\n   * @internal\n   * @override\n   */\n  _addEventListener(\n    eventName: AlchemyEventType,\n    listener: Listener,\n    once: boolean\n  ): this {\n    if (isAlchemyEvent(eventName)) {\n      verifyAlchemyEventName(eventName);\n      const event = new EthersEvent(\n        getAlchemyEventTag(eventName),\n        listener,\n        once\n      );\n      this._events.push(event);\n      this._startEvent(event);\n      return this;\n    } else {\n      return super._addEventListener(eventName, listener, once);\n    }\n  }\n\n  /**\n   * Overrides the `_startEvent()` method in ethers.js's\n   * {@link WebSocketProvider} to include additional alchemy methods.\n   *\n   * @param event\n   * @override\n   * @internal\n   */\n  _startEvent(event: EthersEvent): void {\n    // Check if the event type is a custom Alchemy subscription.\n    const customLogicTypes = [...ALCHEMY_EVENT_TYPES, 'block', 'filter'];\n    if (customLogicTypes.includes(event.type)) {\n      this.customStartEvent(event);\n    } else {\n      super._startEvent(event);\n    }\n  }\n\n  /**\n   * Overridden from ethers.js's {@link WebSocketProvider}\n   *\n   * Modified in order to add mappings for backfilling.\n   *\n   * @internal\n   * @override\n   */\n  async _subscribe(\n    tag: string,\n    param: Array<any>,\n    processFunc: (result: any) => void,\n    event?: EthersEvent\n  ): Promise<void> {\n    let subIdPromise = this._subIds[tag];\n\n    // BEGIN MODIFIED CODE\n    const startingBlockNumber = await this.getBlockNumber();\n    // END MODIFIED CODE\n\n    if (subIdPromise == null) {\n      subIdPromise = Promise.all(param).then(param => {\n        return this.send('eth_subscribe', param);\n      });\n      this._subIds[tag] = subIdPromise;\n    }\n    const subId = await subIdPromise;\n\n    // BEGIN MODIFIED CODE\n    const resolvedParams = await Promise.all(param);\n    this.virtualSubscriptionsById.set(subId, {\n      event: event!,\n      method: 'eth_subscribe',\n      params: resolvedParams,\n      startingBlockNumber,\n      virtualId: subId,\n      physicalId: subId,\n      sentEvents: [],\n      isBackfilling: false,\n      backfillBuffer: []\n    });\n    this.virtualIdsByPhysicalId.set(subId, subId);\n\n    // END MODIFIED CODE\n\n    this._subs[subId] = { tag, processFunc };\n  }\n\n  /**\n   * DO NOT MODIFY.\n   *\n   * Original code copied over from ether.js's `BaseProvider`.\n   *\n   * This method is copied over directly in order to implement Alchemy's unique\n   * subscription types. The only difference is that this method calls\n   * {@link getAlchemyEventTag} instead of the original `getEventTag()` method in\n   * order to parse the Alchemy subscription event.\n   *\n   * @internal\n   * @override\n   */\n  emit(eventName: AlchemyEventType, ...args: Array<any>): boolean {\n    if (isAlchemyEvent(eventName)) {\n      let result = false;\n\n      const stopped: Array<EthersEvent> = [];\n\n      // This line is the only modified line from the original method.\n      const eventTag = getAlchemyEventTag(eventName);\n\n      this._events = this._events.filter(event => {\n        if (event.tag !== eventTag) {\n          return true;\n        }\n\n        setTimeout(() => {\n          event.listener.apply(this, args);\n        }, 0);\n\n        result = true;\n\n        if (event.once) {\n          stopped.push(event);\n          return false;\n        }\n\n        return true;\n      });\n\n      stopped.forEach(event => {\n        this._stopEvent(event);\n      });\n\n      return result;\n    } else {\n      return super.emit(eventName, ...args);\n    }\n  }\n\n  /** @internal */\n  async sendBatch(parts: BatchPart[]): Promise<any[]> {\n    let nextId = 0;\n    const payload: JsonRpcRequest[] = parts.map(({ method, params }) => {\n      return {\n        method,\n        params,\n        jsonrpc: '2.0',\n        id: `alchemy-sdk:${nextId++}`\n      };\n    });\n\n    return this.sendBatchConcurrently(payload);\n  }\n\n  /** @override */\n  destroy(): Promise<void> {\n    this.removeSocketListeners();\n    this.stopHeartbeatAndBackfill();\n    return super.destroy();\n  }\n\n  /**\n   * Overrides the ether's `isCommunityResource()` method. Returns true if the\n   * current api key is the default key.\n   *\n   * @override\n   */\n  isCommunityResource(): boolean {\n    return this.apiKey === DEFAULT_ALCHEMY_API_KEY;\n  }\n\n  /**\n   * DO NOT MODIFY.\n   *\n   * Original code copied over from ether.js's `WebSocketProvider._stopEvent()`.\n   *\n   * This method is copied over directly in order to support Alchemy's\n   * subscription type by allowing the provider to properly stop Alchemy's\n   * subscription events.\n   *\n   * @internal\n   */\n  _stopEvent(event: EthersEvent): void {\n    let tag = event.tag;\n\n    // START MODIFIED CODE\n    if (ALCHEMY_EVENT_TYPES.includes(event.type)) {\n      // There are remaining pending transaction listeners.\n      if (\n        this._events.filter(e => ALCHEMY_EVENT_TYPES.includes(e.type)).length\n      ) {\n        return;\n      }\n      // END MODIFIED CODE\n    } else if (event.type === 'tx') {\n      // There are remaining transaction event listeners\n      if (this._events.filter(e => e.type === 'tx').length) {\n        return;\n      }\n      tag = 'tx';\n    } else if (this.listenerCount(event.event)) {\n      // There are remaining event listeners\n      return;\n    }\n\n    const subId = this._subIds[tag];\n    if (!subId) {\n      return;\n    }\n\n    delete this._subIds[tag];\n    void subId.then(subId => {\n      if (!this._subs[subId]) {\n        return;\n      }\n      delete this._subs[subId];\n      void this.send('eth_unsubscribe', [subId]);\n    });\n  }\n\n  /** @internal */\n  private addSocketListeners(): void {\n    this._websocket.addEventListener('message', this.handleMessage);\n    this._websocket.addEventListener('reopen', this.handleReopen);\n    this._websocket.addEventListener('down', this.stopHeartbeatAndBackfill);\n  }\n\n  /** @internal */\n  private removeSocketListeners(): void {\n    this._websocket.removeEventListener('message', this.handleMessage);\n    this._websocket.removeEventListener('reopen', this.handleReopen);\n    this._websocket.removeEventListener('down', this.stopHeartbeatAndBackfill);\n  }\n\n  /**\n   * The underlying ethers {@link WebSocketProvider} already handles and emits\n   * messages. To allow backfilling, track all messages that are emitted.\n   *\n   * This is a field arrow function in order to preserve `this` context when\n   * passing the method as an event listener.\n   *\n   * @internal\n   */\n  private handleMessage = (event: MessageEvent): void => {\n    const message: WebSocketMessage = JSON.parse(event.data);\n    if (!isSubscriptionEvent(message)) {\n      return;\n    }\n    const physicalId = message.params.subscription;\n    const virtualId = this.virtualIdsByPhysicalId.get(physicalId);\n    if (!virtualId) {\n      return;\n    }\n    const subscription = this.virtualSubscriptionsById.get(virtualId)!;\n    if (subscription.method !== 'eth_subscribe') {\n      return;\n    }\n\n    switch (subscription.params[0]) {\n      case 'newHeads': {\n        const newHeadsSubscription = subscription as NewHeadsSubscription;\n        const newHeadsMessage = message as SubscriptionEvent<NewHeadsEvent>;\n        const { isBackfilling, backfillBuffer } = newHeadsSubscription;\n        const { result } = newHeadsMessage.params;\n        if (isBackfilling) {\n          addToNewHeadsEventsBuffer(backfillBuffer, result);\n        } else if (physicalId !== virtualId) {\n          // In the case of a re-opened subscription, ethers will not emit the\n          // event, so the SDK has to.\n          this.emitAndRememberEvent(virtualId, result, getNewHeadsBlockNumber);\n        } else {\n          // Ethers subscription mapping will emit the event, just store it.\n          this.rememberEvent(virtualId, result, getNewHeadsBlockNumber);\n        }\n        break;\n      }\n      case 'logs': {\n        const logsSubscription = subscription as LogsSubscription;\n        const logsMessage = message as SubscriptionEvent<LogsEvent>;\n        const { isBackfilling, backfillBuffer } = logsSubscription;\n        const { result } = logsMessage.params;\n        if (isBackfilling) {\n          addToLogsEventsBuffer(backfillBuffer, result);\n        } else if (virtualId !== physicalId) {\n          this.emitAndRememberEvent(virtualId, result, getLogsBlockNumber);\n        } else {\n          this.rememberEvent(virtualId, result, getLogsBlockNumber);\n        }\n        break;\n      }\n      default:\n        if (physicalId !== virtualId) {\n          // In the case of a re-opened subscription, ethers will not emit the\n          // event, so the SDK has to.\n          const { result } = (message as SubscriptionEvent<unknown>).params;\n          this.emitEvent(virtualId, result);\n        }\n    }\n  };\n\n  /**\n   * When the websocket connection reopens:\n   *\n   * 1. Resubscribe to all existing subscriptions and start backfilling\n   * 2. Restart heart beat.\n   *\n   * This is a field arrow function in order to preserve `this` context when\n   * passing the method as an event listener.\n   *\n   * @internal\n   */\n  private handleReopen = () => {\n    this.virtualIdsByPhysicalId.clear();\n    const { cancel, isCancelled } = makeCancelToken();\n    this.cancelBackfill = cancel;\n    for (const subscription of this.virtualSubscriptionsById.values()) {\n      void (async () => {\n        try {\n          await this.resubscribeAndBackfill(isCancelled, subscription);\n        } catch (error) {\n          if (!isCancelled()) {\n            console.error(\n              `Error while backfilling \"${subscription.params[0]}\" subscription. Some events may be missing.`,\n              error\n            );\n          }\n        }\n      })();\n    }\n    this.startHeartbeat();\n  };\n\n  /**\n   * Reopens the backfill based on\n   *\n   * @param isCancelled\n   * @param subscription\n   * @internal\n   */\n  private async resubscribeAndBackfill(\n    isCancelled: () => boolean,\n    subscription: VirtualSubscription\n  ): Promise<void> {\n    const {\n      virtualId,\n      method,\n      params,\n      sentEvents,\n      backfillBuffer,\n      startingBlockNumber\n    } = subscription;\n    subscription.isBackfilling = true;\n    backfillBuffer.length = 0;\n    try {\n      const physicalId = await this.send(method, params);\n      throwIfCancelled(isCancelled);\n      subscription.physicalId = physicalId;\n      this.virtualIdsByPhysicalId.set(physicalId, virtualId);\n      switch (params[0]) {\n        case 'newHeads': {\n          const backfillEvents = await withBackoffRetries(\n            () =>\n              withTimeout(\n                this.backfiller.getNewHeadsBackfill(\n                  isCancelled,\n                  sentEvents,\n                  startingBlockNumber\n                ),\n                BACKFILL_TIMEOUT\n              ),\n            BACKFILL_RETRIES,\n            () => !isCancelled()\n          );\n          throwIfCancelled(isCancelled);\n          const events = dedupeNewHeads([...backfillEvents, ...backfillBuffer]);\n          events.forEach(event => this.emitNewHeadsEvent(virtualId, event));\n          break;\n        }\n        case 'logs': {\n          const filter: LogsSubscriptionFilter = params[1] || {};\n          const backfillEvents = await withBackoffRetries(\n            () =>\n              withTimeout(\n                this.backfiller.getLogsBackfill(\n                  isCancelled,\n                  filter,\n                  sentEvents,\n                  startingBlockNumber\n                ),\n                BACKFILL_TIMEOUT\n              ),\n            BACKFILL_RETRIES,\n            () => !isCancelled()\n          );\n          throwIfCancelled(isCancelled);\n          const events = dedupeLogs([...backfillEvents, ...backfillBuffer]);\n          events.forEach(event => this.emitLogsEvent(virtualId, event));\n          break;\n        }\n        default:\n          break;\n      }\n    } finally {\n      subscription.isBackfilling = false;\n      backfillBuffer.length = 0;\n    }\n  }\n\n  /**\n   * Cancels the heartbeat and any pending backfills being performed. This is\n   * called when the websocket connection goes down or is disconnected.\n   *\n   * This is a field arrow function in order to preserve `this` context when\n   * passing the method as an event listener.\n   *\n   * @internal\n   */\n  private stopHeartbeatAndBackfill = () => {\n    if (this.heartbeatIntervalId != null) {\n      clearInterval(this.heartbeatIntervalId);\n      this.heartbeatIntervalId = undefined;\n    }\n    this.cancelBackfill();\n  };\n\n  /** @internal */\n  private emitNewHeadsEvent(virtualId: string, result: NewHeadsEvent): void {\n    this.emitAndRememberEvent(virtualId, result, getNewHeadsBlockNumber);\n  }\n\n  /** @internal */\n  private emitLogsEvent(virtualId: string, result: LogsEvent): void {\n    this.emitAndRememberEvent(virtualId, result, getLogsBlockNumber);\n  }\n\n  /**\n   * Emits an event to consumers, but also remembers it in its subscriptions's\n   * `sentEvents` buffer so that we can detect re-orgs if the connection drops\n   * and needs to be reconnected.\n   *\n   * @internal\n   */\n  private emitAndRememberEvent<T>(\n    virtualId: string,\n    result: T,\n    getBlockNumber: (result: T) => number\n  ): void {\n    this.rememberEvent(virtualId, result, getBlockNumber);\n    this.emitEvent(virtualId, result);\n  }\n\n  private emitEvent<T>(virtualId: string, result: T): void {\n    const subscription = this.virtualSubscriptionsById.get(virtualId);\n    if (!subscription) {\n      return;\n    }\n    this.emitGenericEvent(subscription, result);\n  }\n\n  /** @internal */\n  private rememberEvent<T>(\n    virtualId: string,\n    result: T,\n    getBlockNumber: (result: T) => number\n  ): void {\n    const subscription = this.virtualSubscriptionsById.get(virtualId);\n    if (!subscription) {\n      return;\n    }\n    // Web3 modifies these event objects once we pass them on (changing hex\n    // numbers to numbers). We want the original event, so make a defensive\n    // copy.\n    addToPastEventsBuffer(\n      subscription.sentEvents,\n      { ...result },\n      getBlockNumber\n    );\n  }\n\n  /** @internal */\n  private emitGenericEvent(\n    subscription: VirtualSubscription,\n    result: any\n  ): void {\n    const emitFunction = this.emitProcessFn(subscription.event);\n    emitFunction(result);\n  }\n\n  /**\n   * Starts a heartbeat that pings the websocket server periodically to ensure\n   * that the connection stays open.\n   *\n   * @internal\n   */\n  private startHeartbeat(): void {\n    if (this.heartbeatIntervalId != null) {\n      return;\n    }\n    this.heartbeatIntervalId = setInterval(async () => {\n      try {\n        await withTimeout(this.send('net_version'), HEARTBEAT_WAIT_TIME);\n      } catch {\n        this._websocket.reconnect();\n      }\n    }, HEARTBEAT_INTERVAL);\n  }\n\n  /**\n   * This method sends the batch concurrently as individual requests rather than\n   * as a batch, which was the original implementation. The original batch logic\n   * is preserved in this implementation in order for faster porting.\n   *\n   * @param payload\n   * @internal\n   */\n  // TODO(cleanup): Refactor and remove usages of `sendBatch()`.\n  // TODO(errors): Use allSettled() once we have more error handling.\n  private async sendBatchConcurrently(\n    payload: JsonRpcRequest[]\n  ): Promise<unknown[]> {\n    return Promise.all(payload.map(req => this.send(req.method, req.params)));\n  }\n\n  /** @internal */\n  private customStartEvent(event: EthersEvent): void {\n    if (event.type === ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE) {\n      const { fromAddress, toAddress, hashesOnly } = event;\n      void this._subscribe(\n        event.tag,\n        [\n          AlchemySubscription.PENDING_TRANSACTIONS,\n          { fromAddress, toAddress, hashesOnly }\n        ],\n        this.emitProcessFn(event),\n        event\n      );\n    } else if (event.type === ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE) {\n      const { addresses, includeRemoved, hashesOnly } = event;\n      void this._subscribe(\n        event.tag,\n        [\n          AlchemySubscription.MINED_TRANSACTIONS,\n          { addresses, includeRemoved, hashesOnly }\n        ],\n        this.emitProcessFn(event),\n        event\n      );\n    } else if (event.type === 'block') {\n      void this._subscribe(\n        'block',\n        ['newHeads'],\n        this.emitProcessFn(event),\n        event\n      );\n    } else if (event.type === 'filter') {\n      void this._subscribe(\n        event.tag,\n        ['logs', this._getFilter(event.filter)],\n        this.emitProcessFn(event),\n        event\n      );\n    }\n  }\n\n  /** @internal */\n  private emitProcessFn(event: EthersEvent): (result: any) => void {\n    switch (event.type) {\n      case ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE:\n        return result =>\n          this.emit(\n            {\n              method: AlchemySubscription.PENDING_TRANSACTIONS,\n              fromAddress: event.fromAddress,\n              toAddress: event.toAddress,\n              hashesOnly: event.hashesOnly\n            },\n            result\n          );\n      case ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE:\n        return result =>\n          this.emit(\n            {\n              method: AlchemySubscription.MINED_TRANSACTIONS,\n              addresses: event.addresses,\n              includeRemoved: event.includeRemoved,\n              hashesOnly: event.hashesOnly\n            },\n            result\n          );\n      case 'block':\n        return result => {\n          const blockNumber = BigNumber.from(result.number).toNumber();\n          this._emitted.block = blockNumber;\n          this.emit('block', blockNumber);\n        };\n      case 'filter':\n        return result => {\n          if (result.removed == null) {\n            result.removed = false;\n          }\n          this.emit(event.filter, this.formatter.filterLog(result));\n        };\n      default:\n        throw new Error('Invalid event type to `emitProcessFn()`');\n    }\n  }\n\n  /**\n   * DO NOT MODIFY.\n   *\n   * Original code copied over from ether.js's `BaseProvider.off()`.\n   *\n   * This method is copied over directly in order to implement Alchemy's unique\n   * subscription types. The only difference is that this method calls\n   * {@link getAlchemyEventTag} instead of the original `getEventTag()` method in\n   * order to parse the Alchemy subscription event.\n   *\n   * @private\n   */\n  private _off(eventName: AlchemyEventType, listener?: Listener): this {\n    if (listener == null) {\n      return this.removeAllListeners(eventName);\n    }\n\n    const stopped: Array<EthersEvent> = [];\n\n    let found = false;\n    const eventTag = getAlchemyEventTag(eventName);\n    this._events = this._events.filter(event => {\n      if (event.tag !== eventTag || event.listener != listener) {\n        return true;\n      }\n      if (found) {\n        return true;\n      }\n      found = true;\n      stopped.push(event);\n      return false;\n    });\n\n    stopped.forEach(event => {\n      this._stopEvent(event);\n    });\n\n    return this;\n  }\n\n  /**\n   * DO NOT MODIFY.\n   *\n   * Original code copied over from ether.js's `BaseProvider.removeAllListeners()`.\n   *\n   * This method is copied over directly in order to implement Alchemy's unique\n   * subscription types. The only difference is that this method calls\n   * {@link getAlchemyEventTag} instead of the original `getEventTag()` method in\n   * order to parse the Alchemy subscription event.\n   *\n   * @private\n   */\n  private _removeAllListeners(eventName: AlchemyEventType): this {\n    let stopped: Array<EthersEvent> = [];\n    if (eventName == null) {\n      stopped = this._events;\n\n      this._events = [];\n    } else {\n      const eventTag = getAlchemyEventTag(eventName);\n      this._events = this._events.filter(event => {\n        if (event.tag !== eventTag) {\n          return true;\n        }\n        stopped.push(event);\n        return false;\n      });\n    }\n\n    stopped.forEach(event => {\n      this._stopEvent(event);\n    });\n\n    return this;\n  }\n\n  /**\n   * DO NOT MODIFY.\n   *\n   * Original code copied over from ether.js's `BaseProvider.listenerCount()`.\n   *\n   * This method is copied over directly in order to implement Alchemy's unique\n   * subscription types. The only difference is that this method calls\n   * {@link getAlchemyEventTag} instead of the original `getEventTag()` method in\n   * order to parse the Alchemy subscription event.\n   *\n   * @private\n   */\n  private _listenerCount(eventName?: AlchemyEventType): number {\n    if (!eventName) {\n      return this._events.length;\n    }\n\n    const eventTag = getAlchemyEventTag(eventName);\n    return this._events.filter(event => {\n      return event.tag === eventTag;\n    }).length;\n  }\n\n  /**\n   * DO NOT MODIFY.\n   *\n   * Original code copied over from ether.js's `BaseProvider.listeners()`.\n   *\n   * This method is copied over directly in order to implement Alchemy's unique\n   * subscription types. The only difference is that this method calls\n   * {@link getAlchemyEventTag} instead of the original `getEventTag()` method in\n   * order to parse the Alchemy subscription event.\n   *\n   * @private\n   */\n  private _listeners(eventName?: AlchemyEventType): Array<Listener> {\n    if (eventName == null) {\n      return this._events.map(event => event.listener);\n    }\n\n    const eventTag = getAlchemyEventTag(eventName);\n    return this._events\n      .filter(event => event.tag === eventTag)\n      .map(event => event.listener);\n  }\n}\n\nfunction getWebsocketConstructor(): any {\n  return isNodeEnvironment() ? require('websocket').w3cwebsocket : WebSocket;\n}\n\nfunction isNodeEnvironment(): boolean {\n  return (\n    typeof process !== 'undefined' &&\n    process != null &&\n    process.versions != null &&\n    process.versions.node != null\n  );\n}\n\n/** @internal */\ninterface CancelToken {\n  cancel(): void;\n  isCancelled(): boolean;\n}\n\ninterface VirtualSubscription {\n  event: EthersEvent;\n  virtualId: string;\n  physicalId: string;\n  method: string;\n  params: any[];\n  isBackfilling: boolean;\n  startingBlockNumber: number;\n  sentEvents: any[];\n  backfillBuffer: any[];\n}\n\ninterface NewHeadsSubscription extends VirtualSubscription {\n  method: 'eth_subscribe';\n  params: ['newHeads'];\n  isBackfilling: boolean;\n  sentEvents: NewHeadsEvent[];\n  backfillBuffer: NewHeadsEvent[];\n}\n\ninterface LogsSubscription extends VirtualSubscription {\n  method: 'eth_subscribe';\n  params: ['logs', LogsSubscriptionFilter?];\n  isBackfilling: boolean;\n  sentEvents: LogsEvent[];\n  backfillBuffer: LogsEvent[];\n}\n\n// TODO(cleanup): Use class variable rather than passing `isCancelled` everywhere.\nfunction makeCancelToken(): CancelToken {\n  let cancelled = false;\n  return { cancel: () => (cancelled = true), isCancelled: () => cancelled };\n}\n\n// TODO(cleanup): replace with SDK's backoff implementation\nconst MIN_RETRY_DELAY = 1000;\nconst RETRY_BACKOFF_FACTOR = 2;\nconst MAX_RETRY_DELAY = 30000;\n\nasync function withBackoffRetries<T>(\n  f: () => Promise<T>,\n  retryCount: number,\n  shouldRetry: (error: unknown) => boolean = () => true\n): Promise<T> {\n  let nextWaitTime = 0;\n  let i = 0;\n  while (true) {\n    try {\n      return await f();\n    } catch (error) {\n      i++;\n      if (i >= retryCount || !shouldRetry(error)) {\n        throw error;\n      }\n      await delay(nextWaitTime);\n      if (!shouldRetry(error)) {\n        throw error;\n      }\n      nextWaitTime =\n        nextWaitTime === 0\n          ? MIN_RETRY_DELAY\n          : Math.min(MAX_RETRY_DELAY, RETRY_BACKOFF_FACTOR * nextWaitTime);\n    }\n  }\n}\n\nfunction delay(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nfunction withTimeout<T>(promise: Promise<T>, ms: number): Promise<T> {\n  return Promise.race([\n    promise,\n    new Promise<T>((_, reject) =>\n      setTimeout(() => reject(new Error('Timeout')), ms)\n    )\n  ]);\n}\n\nfunction getNewHeadsBlockNumber(event: NewHeadsEvent): number {\n  return fromHex(event.number);\n}\n\nfunction getLogsBlockNumber(event: LogsEvent): number {\n  return fromHex(event.blockNumber);\n}\n\nfunction isResponse(\n  message: WebSocketMessage\n): message is SingleOrBatchResponse {\n  return (\n    Array.isArray(message) ||\n    (message.jsonrpc === '2.0' && (message as JsonRpcResponse).id !== undefined)\n  );\n}\n\nfunction isSubscriptionEvent(\n  message: WebSocketMessage\n): message is SubscriptionEvent {\n  return !isResponse(message);\n}\n\nfunction addToNewHeadsEventsBuffer(\n  pastEvents: NewHeadsEvent[],\n  event: NewHeadsEvent\n): void {\n  addToPastEventsBuffer(pastEvents, event, getNewHeadsBlockNumber);\n}\n\nfunction addToLogsEventsBuffer(\n  pastEvents: LogsEvent[],\n  event: LogsEvent\n): void {\n  addToPastEventsBuffer(pastEvents, event, getLogsBlockNumber);\n}\n\n/**\n * Adds a new event to an array of events, evicting any events which are so old\n * that they will no longer feasibly be part of a reorg.\n */\nfunction addToPastEventsBuffer<T>(\n  pastEvents: T[],\n  event: T,\n  getBlockNumber: (event: T) => number\n): void {\n  const currentBlockNumber = getBlockNumber(event);\n  // Find first index of an event recent enough to retain, then drop everything\n  // at a lower index.\n  const firstGoodIndex = pastEvents.findIndex(\n    e => getBlockNumber(e) > currentBlockNumber - RETAINED_EVENT_BLOCK_COUNT\n  );\n  if (firstGoodIndex === -1) {\n    pastEvents.length = 0;\n  } else {\n    pastEvents.splice(0, firstGoodIndex);\n  }\n  pastEvents.push(event);\n}\n",null,"export interface Options {\n    allClearResetTime?: number;\n    connectTimeout?: number;\n    debug?: boolean;\n    minReconnectDelay?: number;\n    maxReconnectDelay?: number;\n    maxReconnectAttempts?: number;\n    reconnectBackoffFactor?: number;\n    wsConstructor?: new (url: string, protocols?: string | string[]) => any;\n    shouldReconnect?(closeEvent: CloseEvent): boolean | Promise<boolean>;\n}\n\ninterface SturdyWebSocketEventMap extends WebSocketEventMap {\n    down: CloseEvent;\n    reopen: Event;\n}\n\ntype WebSocketListener<K extends keyof SturdyWebSocketEventMap> = (\n    this: WebSocket,\n    event: SturdyWebSocketEventMap[K],\n) => any;\n\ntype WebSocketListeners = {\n    [K in keyof SturdyWebSocketEventMap]?: Array<WebSocketListener<K>>;\n} & {\n    [key: string]: EventListenerOrEventListenerObject[];\n};\n\nconst SHOULD_RECONNECT_FALSE_MESSAGE =\n    \"Provided shouldReconnect() returned false. Closing permanently.\";\nconst SHOULD_RECONNECT_PROMISE_FALSE_MESSAGE =\n    \"Provided shouldReconnect() resolved to false. Closing permanently.\";\n\nexport default class SturdyWebSocket implements WebSocket {\n    public static readonly DEFAULT_OPTIONS: Required<Options> = {\n        allClearResetTime: 5000,\n        connectTimeout: 5000,\n        debug: false,\n        minReconnectDelay: 1000,\n        maxReconnectDelay: 30000,\n        maxReconnectAttempts: Number.POSITIVE_INFINITY,\n        reconnectBackoffFactor: 1.5,\n        shouldReconnect: () => true,\n        wsConstructor: undefined!,\n    };\n\n    public static readonly CONNECTING = 0;\n    public static readonly OPEN = 1;\n    public static readonly CLOSING = 2;\n    public static readonly CLOSED = 3;\n\n    public onclose: ((event: CloseEvent) => void) | null = null;\n    public onerror: ((event: Event) => void) | null = null;\n    public onmessage: ((event: MessageEvent) => void) | null = null;\n    public onopen: ((event: Event) => void) | null = null;\n    public ondown: ((event: CloseEvent | undefined) => void) | null = null;\n    public onreopen: ((event: Event) => void) | null = null;\n    public readonly CONNECTING = SturdyWebSocket.CONNECTING;\n    public readonly OPEN = SturdyWebSocket.OPEN;\n    public readonly CLOSING = SturdyWebSocket.CLOSING;\n    public readonly CLOSED = SturdyWebSocket.CLOSED;\n\n    private readonly protocols?: string | string[];\n    private readonly options: Required<Options>;\n    private ws?: WebSocket;\n    private hasBeenOpened = false;\n    private isClosed = false;\n    private messageBuffer: any[] = [];\n    private nextRetryTime: number = 0;\n    private reconnectCount = 0;\n    private allClearTimeoutId?: any;\n    private connectTimeoutId?: any;\n    private binaryTypeInternal?: BinaryType;\n    private lastKnownExtensions = \"\";\n    private lastKnownProtocol = \"\";\n    private readonly listeners: WebSocketListeners = {};\n\n    constructor(url: string, options?: Options);\n    constructor(\n        url: string,\n        protocols: string | string[] | undefined,\n        options?: Options,\n    );\n    constructor(\n        public readonly url: string,\n        protocolsOrOptions?: string | string[] | Options,\n        options: Options = {},\n    ) {\n        if (\n            protocolsOrOptions == null ||\n            typeof protocolsOrOptions === \"string\" ||\n            Array.isArray(protocolsOrOptions)\n        ) {\n            this.protocols = protocolsOrOptions;\n        } else {\n            options = protocolsOrOptions;\n        }\n        this.options = applyDefaultOptions(options);\n        if (!this.options.wsConstructor) {\n            if (typeof WebSocket !== \"undefined\") {\n                this.options.wsConstructor = WebSocket;\n            } else {\n                throw new Error(\n                    \"WebSocket not present in global scope and no \" +\n                        \"wsConstructor option was provided.\",\n                );\n            }\n        }\n        this.openNewWebSocket();\n    }\n\n    public get binaryType(): BinaryType {\n        return this.binaryTypeInternal || \"blob\";\n    }\n\n    public set binaryType(binaryType: BinaryType) {\n        this.binaryTypeInternal = binaryType;\n        if (this.ws) {\n            this.ws.binaryType = binaryType;\n        }\n    }\n\n    public get bufferedAmount(): number {\n        let sum = this.ws ? this.ws.bufferedAmount : 0;\n        let hasUnknownAmount = false;\n        this.messageBuffer.forEach(data => {\n            const byteLength = getDataByteLength(data);\n            if (byteLength != null) {\n                sum += byteLength;\n            } else {\n                hasUnknownAmount = true;\n            }\n        });\n        if (hasUnknownAmount) {\n            this.debugLog(\n                \"Some buffered data had unknown length. bufferedAmount()\" +\n                    \" return value may be below the correct amount.\",\n            );\n        }\n        return sum;\n    }\n\n    public get extensions(): string {\n        return this.ws ? this.ws.extensions : this.lastKnownExtensions;\n    }\n\n    public get protocol(): string {\n        return this.ws ? this.ws.protocol : this.lastKnownProtocol;\n    }\n\n    public get readyState(): number {\n        return this.isClosed ? SturdyWebSocket.CLOSED : SturdyWebSocket.OPEN;\n    }\n\n    public close(code?: number, reason?: string): void {\n        this.disposeSocket(code, reason);\n        this.shutdown();\n        this.debugLog(\"WebSocket permanently closed by client.\");\n    }\n\n    public send(data: any): void {\n        if (this.isClosed) {\n            throw new Error(\"WebSocket is already in CLOSING or CLOSED state.\");\n        } else if (this.ws && this.ws.readyState === this.OPEN) {\n            this.ws.send(data);\n        } else {\n            this.messageBuffer.push(data);\n        }\n    }\n\n    public reconnect(): void {\n        if (this.isClosed) {\n            throw new Error(\n                \"Cannot call reconnect() on socket which is permanently closed.\",\n            );\n        }\n        this.disposeSocket(1000, \"Client requested reconnect.\");\n        this.handleClose(undefined);\n    }\n\n    public addEventListener<K extends keyof SturdyWebSocketEventMap>(\n        type: K,\n        listener: (this: WebSocket, event: SturdyWebSocketEventMap[K]) => void,\n    ): void;\n    public addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n    ): void;\n    public addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n    ): void {\n        if (!this.listeners[type]) {\n            this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n    }\n\n    public dispatchEvent(event: Event): boolean {\n        return this.dispatchEventOfType(event.type, event);\n    }\n\n    public removeEventListener<K extends keyof SturdyWebSocketEventMap>(\n        type: K,\n        listener: (this: WebSocket, event: SturdyWebSocketEventMap[K]) => void,\n    ): void;\n    public removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n    ): void;\n    public removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n    ): void {\n        if (this.listeners[type]) {\n            this.listeners[type] = this.listeners[type].filter(\n                l => l !== listener,\n            );\n        }\n    }\n\n    private openNewWebSocket(): void {\n        if (this.isClosed) {\n            return;\n        }\n        const { connectTimeout, wsConstructor } = this.options;\n        this.debugLog(`Opening new WebSocket to ${this.url}.`);\n        const ws: WebSocket = new wsConstructor(this.url, this.protocols);\n        ws.onclose = event => this.handleClose(event);\n        ws.onerror = event => this.handleError(event);\n        ws.onmessage = event => this.handleMessage(event);\n        ws.onopen = event => this.handleOpen(event);\n        this.connectTimeoutId = setTimeout(() => {\n            // If this is running, we still haven't opened the websocket.\n            // Kill it so we can try again.\n            this.clearConnectTimeout();\n            this.disposeSocket();\n            this.handleClose(undefined);\n        }, connectTimeout);\n        this.ws = ws;\n    }\n\n    private handleOpen(event: Event): void {\n        if (!this.ws || this.isClosed) {\n            return;\n        }\n        const { allClearResetTime } = this.options;\n        this.debugLog(\"WebSocket opened.\");\n        if (this.binaryTypeInternal != null) {\n            this.ws.binaryType = this.binaryTypeInternal;\n        } else {\n            this.binaryTypeInternal = this.ws.binaryType;\n        }\n        this.clearConnectTimeout();\n        if (this.hasBeenOpened) {\n            this.dispatchEventOfType(\"reopen\", event);\n        } else {\n            this.dispatchEventOfType(\"open\", event);\n            this.hasBeenOpened = true;\n        }\n        this.messageBuffer.forEach(message => this.send(message));\n        this.messageBuffer = [];\n        this.allClearTimeoutId = setTimeout(() => {\n            this.clearAllClearTimeout();\n            this.nextRetryTime = 0;\n            this.reconnectCount = 0;\n            const openTime = (allClearResetTime / 1000) | 0;\n            this.debugLog(\n                `WebSocket remained open for ${openTime} seconds. Resetting` +\n                    \" retry time and count.\",\n            );\n        }, allClearResetTime);\n    }\n\n    private handleMessage(event: MessageEvent): void {\n        if (this.isClosed) {\n            return;\n        }\n        this.dispatchEventOfType(\"message\", event);\n    }\n\n    private handleClose(event: CloseEvent | undefined): void {\n        if (this.isClosed) {\n            return;\n        }\n        const { maxReconnectAttempts, shouldReconnect } = this.options;\n        this.clearConnectTimeout();\n        this.clearAllClearTimeout();\n        if (this.ws) {\n            this.lastKnownExtensions = this.ws.extensions;\n            this.lastKnownProtocol = this.ws.protocol;\n            this.disposeSocket();\n        }\n        this.dispatchEventOfType(\"down\", event);\n        if (this.reconnectCount >= maxReconnectAttempts) {\n            this.stopReconnecting(\n                event,\n                this.getTooManyFailedReconnectsMessage(),\n            );\n            return;\n        }\n        const willReconnect = !event || shouldReconnect(event);\n        if (typeof willReconnect === \"boolean\") {\n            this.handleWillReconnect(\n                willReconnect,\n                event,\n                SHOULD_RECONNECT_FALSE_MESSAGE,\n            );\n        } else {\n            willReconnect.then(willReconnectResolved => {\n                if (this.isClosed) {\n                    return;\n                }\n                this.handleWillReconnect(\n                    willReconnectResolved,\n                    event,\n                    SHOULD_RECONNECT_PROMISE_FALSE_MESSAGE,\n                );\n            });\n        }\n    }\n\n    private handleError(event: Event): void {\n        this.dispatchEventOfType(\"error\", event);\n        this.debugLog(\"WebSocket encountered an error.\");\n    }\n\n    private handleWillReconnect(\n        willReconnect: boolean,\n        event: CloseEvent | undefined,\n        denialReason: string,\n    ): void {\n        if (willReconnect) {\n            this.reestablishConnection();\n        } else {\n            this.stopReconnecting(event, denialReason);\n        }\n    }\n\n    private reestablishConnection(): void {\n        const {\n            minReconnectDelay,\n            maxReconnectDelay,\n            reconnectBackoffFactor,\n        } = this.options;\n        this.reconnectCount++;\n        const retryTime = this.nextRetryTime;\n        this.nextRetryTime = Math.max(\n            minReconnectDelay,\n            Math.min(\n                this.nextRetryTime * reconnectBackoffFactor,\n                maxReconnectDelay,\n            ),\n        );\n        setTimeout(() => this.openNewWebSocket(), retryTime);\n        const retryTimeSeconds = (retryTime / 1000) | 0;\n        this.debugLog(\n            `WebSocket was closed. Re-opening in ${retryTimeSeconds} seconds.`,\n        );\n    }\n\n    private stopReconnecting(\n        event: CloseEvent | undefined,\n        debugReason: string,\n    ): void {\n        this.debugLog(debugReason);\n        this.shutdown();\n        if (event) {\n            this.dispatchEventOfType(\"close\", event);\n        }\n    }\n\n    private shutdown(): void {\n        this.isClosed = true;\n        this.clearAllTimeouts();\n        this.messageBuffer = [];\n        this.disposeSocket();\n    }\n\n    private disposeSocket(closeCode?: number, reason?: string): void {\n        if (!this.ws) {\n            return;\n        }\n        // Use noop handlers instead of null because some WebSocket\n        // implementations, such as the one from isomorphic-ws, raise a stink on\n        // unhandled events.\n        this.ws.onerror = noop;\n        this.ws.onclose = noop;\n        this.ws.onmessage = noop;\n        this.ws.onopen = noop;\n        this.ws.close(closeCode, reason);\n        this.ws = undefined;\n    }\n\n    private clearAllTimeouts(): void {\n        this.clearConnectTimeout();\n        this.clearAllClearTimeout();\n    }\n\n    private clearConnectTimeout(): void {\n        if (this.connectTimeoutId != null) {\n            clearTimeout(this.connectTimeoutId);\n            this.connectTimeoutId = undefined;\n        }\n    }\n\n    private clearAllClearTimeout(): void {\n        if (this.allClearTimeoutId != null) {\n            clearTimeout(this.allClearTimeoutId);\n            this.allClearTimeoutId = undefined;\n        }\n    }\n\n    private dispatchEventOfType(type: string, event: any): boolean {\n        switch (type) {\n            case \"close\":\n                if (this.onclose) {\n                    this.onclose(event);\n                }\n                break;\n            case \"error\":\n                if (this.onerror) {\n                    this.onerror(event);\n                }\n                break;\n            case \"message\":\n                if (this.onmessage) {\n                    this.onmessage(event);\n                }\n                break;\n            case \"open\":\n                if (this.onopen) {\n                    this.onopen(event);\n                }\n                break;\n            case \"down\":\n                if (this.ondown) {\n                    this.ondown(event);\n                }\n                break;\n            case \"reopen\":\n                if (this.onreopen) {\n                    this.onreopen(event);\n                }\n                break;\n        }\n        if (type in this.listeners) {\n            this.listeners[type]\n                .slice()\n                .forEach(listener => this.callListener(listener, event));\n        }\n        return !event || !(event as Event).defaultPrevented;\n    }\n\n    private callListener(\n        listener: EventListenerOrEventListenerObject,\n        event: Event,\n    ): void {\n        if (typeof listener === \"function\") {\n            listener.call(this, event);\n        } else {\n            listener.handleEvent.call(this, event);\n        }\n    }\n\n    private debugLog(message: string): void {\n        if (this.options.debug) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        }\n    }\n\n    private getTooManyFailedReconnectsMessage(): string {\n        const { maxReconnectAttempts } = this.options;\n        return `Failed to reconnect after ${maxReconnectAttempts} ${pluralize(\n            \"attempt\",\n            maxReconnectAttempts,\n        )}. Closing permanently.`;\n    }\n}\n\nfunction applyDefaultOptions(options: Options): Required<Options> {\n    const result: any = {};\n    Object.keys(SturdyWebSocket.DEFAULT_OPTIONS).forEach(key => {\n        const value = (options as any)[key];\n        result[key] =\n            value === undefined\n                ? (SturdyWebSocket.DEFAULT_OPTIONS as any)[key]\n                : value;\n    });\n    return result;\n}\n\nfunction getDataByteLength(data: any): number | undefined {\n    if (typeof data === \"string\") {\n        // UTF-16 strings use two bytes per character.\n        return 2 * data.length;\n    } else if (data instanceof ArrayBuffer) {\n        return data.byteLength;\n    } else if (data instanceof Blob) {\n        return data.size;\n    } else {\n        return undefined;\n    }\n}\n\nfunction pluralize(s: string, n: number): string {\n    return n === 1 ? s : `${s}s`;\n}\n\nfunction noop(): void {\n    // Nothing.\n}\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","module.exports = require('../package.json').version;\n","{\n  \"name\": \"websocket\",\n  \"description\": \"Websocket Client & Server Library implementing the WebSocket protocol as specified in RFC 6455.\",\n  \"keywords\": [\n    \"websocket\",\n    \"websockets\",\n    \"socket\",\n    \"networking\",\n    \"comet\",\n    \"push\",\n    \"RFC-6455\",\n    \"realtime\",\n    \"server\",\n    \"client\"\n  ],\n  \"author\": \"Brian McKelvey <theturtle32@gmail.com> (https://github.com/theturtle32)\",\n  \"contributors\": [\n    \"Iñaki Baz Castillo <ibc@aliax.net> (http://dev.sipdoc.net)\"\n  ],\n  \"version\": \"1.0.34\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/theturtle32/WebSocket-Node.git\"\n  },\n  \"homepage\": \"https://github.com/theturtle32/WebSocket-Node\",\n  \"engines\": {\n    \"node\": \">=4.0.0\"\n  },\n  \"dependencies\": {\n    \"bufferutil\": \"^4.0.1\",\n    \"debug\": \"^2.2.0\",\n    \"es5-ext\": \"^0.10.50\",\n    \"typedarray-to-buffer\": \"^3.1.5\",\n    \"utf-8-validate\": \"^5.0.2\",\n    \"yaeti\": \"^0.0.6\"\n  },\n  \"devDependencies\": {\n    \"buffer-equal\": \"^1.0.0\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-jshint\": \"^2.0.4\",\n    \"jshint-stylish\": \"^2.2.1\",\n    \"jshint\": \"^2.0.0\",\n    \"tape\": \"^4.9.1\"\n  },\n  \"config\": {\n    \"verbose\": false\n  },\n  \"scripts\": {\n    \"test\": \"tape test/unit/*.js\",\n    \"gulp\": \"gulp\"\n  },\n  \"main\": \"index\",\n  \"directories\": {\n    \"lib\": \"./lib\"\n  },\n  \"browser\": \"lib/browser.js\",\n  \"license\": \"Apache-2.0\"\n}\n"],"names":["getNetworkFromEthers"],"version":3,"file":"alchemy-websocket-provider-3523bd89.9390f3ca.js.map","sourceRoot":"/__parcel_source_root/"}